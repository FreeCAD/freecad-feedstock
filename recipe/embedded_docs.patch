diff --git a/src/Gui/Assistant.cpp b/src/Gui/Assistant.cpp
index 894af9954..d999471e1 100644
--- a/src/Gui/Assistant.cpp
+++ b/src/Gui/Assistant.cpp
@@ -99,6 +99,7 @@ bool Assistant::startAssistant()
         QString doc = QString::fromUtf8(App::Application::getHelpDir().c_str());
         QString qhc = doc + exe.toLower() + QLatin1String(".qhc");
 
+
         QFileInfo fi(qhc);
         if (!fi.isReadable()) {
             QMessageBox::critical(0, tr("%1 Help").arg(exe),
@@ -112,6 +113,51 @@ bool Assistant::startAssistant()
             first = false;
         }
 
+        // AppImage start
+        // AppImage mount location changes on each start. Assistant caches freecad.qhc
+        // file and sets an absolute path. As a result embedded documentation only works
+        // on the first AppImage (help) run. Register the .gch file, to overcome the issue.
+        static bool start = true;
+        if (start) {
+            char* appimage = getenv("APPIMAGE");
+            if (appimage) {
+                QString qch = doc + exe.toLower() + QLatin1String(".qch");
+                QFileInfo fi(qch);
+                if (fi.isReadable()) {
+                    // Assume documentation is embedded
+                    // Unregister qch file (path) from previous AppImage run
+                    QStringList args;
+
+                    args << QLatin1String("-collectionFile") << qhc
+                         << QLatin1String("-unregister") << qch;
+
+                    proc->start(app, args);
+
+                    if (!proc->waitForFinished(50000)) {
+                        QMessageBox::critical(0, tr("%1 Help").arg(exe),
+                            tr("Unable to launch Qt Assistant (%1)").arg(app));
+                        return false;
+                    }
+
+                    // Register qch file (path) for current AppImage run
+                    args.clear();
+
+                    args << QLatin1String("-collectionFile") << qhc
+                         << QLatin1String("-register") << qch;
+
+                    proc->start(app, args);
+
+                    if (!proc->waitForFinished(50000)) {
+                        QMessageBox::critical(0, tr("%1 Help").arg(exe),
+                            tr("Unable to launch Qt Assistant (%1)").arg(app));
+                        return false;
+                    }
+                }
+            }
+            start = false;
+        }
+        // AppImage end
+
         QStringList args;
 
         args << QLatin1String("-collectionFile") << qhc
